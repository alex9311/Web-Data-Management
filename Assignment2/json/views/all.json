{
  "_id": "_design/app",
  "language": "javascript",
  "views": {
    "title": {
      "map": "function(doc) { 
      	emit(doc.title.trim().toLowerCase(), doc); 
      	words = doc.title.replace(/[!.,;]+/g,'').toLowerCase().split(' '); 
      	for each (word in words){
      		if(word!='-'&&word!=''&&word!=':'&&word!='.'){ 
      			emit(word,doc);
      		} 
      	} 
      }"
    },
    "actor": {
      "map": "function(doc){
        for each(author in doc.authors) {
          emit(author.trim().toLowerCase(), doc);
          words = author.replace(/[!.,;]+/g,'').toLowerCase().split(' ');
          for each (word in words) {
            if(word!='-'&&word!=''&&word!=':'&&word!='.'){
              emit(word,doc);
            }
          }
        }
      }"
    },
    "year": {
      "map": "function(doc){
          emit(doc.year.trim(), doc);
      }"
    },
    "publisher": {
      "map": "function(doc){
        emit(doc.publisher.trim().toLowerCase(), doc);
        words = doc.publisher.replace(/[!.,;]+/g,'').toLowerCase().split(' ');
        for each (word in words) {
          if(word!='-'&&word!=''&&word!=':'&&word!='.'){
          emit(word,doc);
          }
        }
      }"
    },
    "title_year": {
      "map": "function(doc){
        year = doc.year.trim();
        emit([doc.title.trim().toLowerCase(), year], doc);
        words = doc.title.replace(/[!.,;]+/g,'').toLowerCase().split(' ');
        for each (word in words) {
          if(word!='-'&&word!=''&&word!=':'&&word!='.'){
            emit([word, year],doc);
          }
        }
      }"
    },
    "author_year": {
      "map": "function(doc){
        year = doc.year.trim();
        for each(author in doc.authors) {
          emit([author.trim().toLowerCase(), year], doc);
          words = author.replace(/[!.,;]+/g,'').toLowerCase().split(' ');
          for each (word in words) {
            if(word!='-'&&word!=''&&word!=':'&&word!='.'){
              emit([word, year],doc);
            }
          }
        }      
      }"
    },
    "publisher_year": {
      "map": "function(doc){
        year = doc.year.trim();
        emit([doc.publisher.trim().toLowerCase(), year], doc);
        words = doc.publisher.replace(/[!.,;]+/g,'').toLowerCase().split(' ');
        for each (word in words) {
          if(word!='-'&&word!=''&&word!=':'&&word!='.'){
          emit([word, year],doc);
          }
        }
      }"
    },
    "title_actor": {
      "map": "function(doc){
        for each(author in doc.authors) {
          emit([doc.title.trim().toLowerCase(), author.trim().toLowerCase()], doc);
          actors = author.replace(/[!.,;]+/g,'').toLowerCase().split(' ');
          for each (actor in actors) {
	    titles = doc.title.replace(/[!.,;]+/g,'').toLowerCase().split(' ');
            for each (title in titles) {
              if(title!='-'&&title!=''&&title!=':'&&title!='.'){
                if(actor!='-'&&actor!=''&&actor!=':'&&actor!='.'){
                  emit([title, actor],doc);
		}
              }
            }
          }
        }
      }"
    }
  }
}
